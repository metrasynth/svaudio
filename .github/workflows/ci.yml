name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]


jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        uses: pre-commit/action@v2.0.3

  # With no caching at all the entire ci process takes 4m 30s to complete!
  pytest:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres

    env:
      CELERY_BROKER_URL: "redis://localhost:6379/0"
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
      SVAUDIO_REPO_API_SECRET_KEY: "abc123"

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Get pip cache dir
        id: pip-cache-location
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip Project Dependencies
        uses: actions/cache@v2.1.5
        with:
          # Get the location of pip cache dir
          path: ${{ steps.pip-cache-location.outputs.dir }}
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('**/local.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt

      - name: Test with pytest
        run:  pytest svaudio
